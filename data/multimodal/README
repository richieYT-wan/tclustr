# Data constructed this way. 11.03.2024 

import pandas as pd
import glob
tcrpep_df = pd.read_csv('../data/filtered/231212_nettcr_expanded_pairedAB_412peps_with_swaps.csv').assign(db='nettcr').query('not origin.str.contains("swapped")')
tcr_df = pd.concat([pd.read_csv(x, sep='\t') for x in glob.glob('../data/immrep/*.tsv')]).assign(db='immrep_negs')
tcr_df = tcr_df[['A1', 'A2', 'A3', 'B1', 'B2', 'B3', 'db']].assign(peptide='XXXXXXXXX')


df = tcrpep_df.query('origin!="peptide_swapped" and input_type=="paired"')
df['peplen'] = df['peptide'].apply(len)
fracdict = (df.groupby('peplen').agg(count=('B3','count')) / len(df)).to_dict()['count']

randompeps = pd.concat([pd.read_csv(x, header=None, names=['peptide']) for x in glob.glob('../data/multimodal/randompeps/*randompeps_*.pep')])
randompeps['len'] = randompeps['peptide'].apply(len)
sample = randompeps.groupby('len', group_keys=False).apply(lambda x: x.sample(frac=fracdict[x.len.unique()[0]], random_state=13))
sample.to_csv('../data/multimodal/randompeps_8_12_lenSampled_1M.txt', index=False)

# Maybe use some of our neoepitope and viral and human peptides from CEDAR + PRIME + IEDB + NEPDB etc
viral = pd.read_csv('../../cedar_icerfire/data/heli_viral', sep =' ', usecols=['Icore', 'Rnk_EL', 'allele', 'id', 'uniprot_id', 'target', 'peptide_length', 'prot_sequence', 'peptide_start'])
human = pd.read_csv('../../cedar_icerfire/data/human_proteome/human_sample_100k.csv')
cedar = pd.read_csv('../../cedar_icerfire/data/aligned_icore/230418_cedar_aligned.csv')
prime = pd.read_csv('../../cedar_icerfire/data/aligned_icore/230418_prime_aligned.csv')
nepdb = pd.read_csv('../../cedar_icerfire/data/aligned_icore/230418_nepdb_aligned.csv')
viral = viral.rename(columns={'Icore':'peptide', 'Rnk_EL':'EL_rank',
              'peptide_length':'peplen', 'allele':'HLA'})\
             .assign(db='viral', input_type='peptide')\
             .drop(columns=['prot_sequence','id'])[['peptide','HLA','target','EL_rank', 'peplen','db','uniprot_id','peptide_start']]
human = human[['icore_mut','HLA', 'EL_rank_mut']].rename(columns={'icore_mut':'peptide', 'EL_rank_mut':'EL_rank'}).assign(target=0).assign(db='human', input_type='peptide')
cedar = cedar[['icore_mut','HLA', 'EL_rank_mut', 'agg_label']].rename(columns={'icore_mut':'peptide', 'EL_rank_mut':'EL_rank', 'agg_label':'target'}).assign(db='cedar', input_type='peptide')
prime = prime[['icore_mut','HLA', 'EL_rank_mut', 'agg_label']].rename(columns={'icore_mut':'peptide', 'EL_rank_mut':'EL_rank', 'agg_label':'target'}).assign(db='prime', input_type='peptide')
nepdb = nepdb[['icore_mut','HLA', 'EL_rank_mut', 'agg_label']].rename(columns={'icore_mut':'peptide', 'EL_rank_mut':'EL_rank', 'agg_label':'target'}).assign(db='nepdb', input_type='peptide')

peptide_data = pd.concat([viral, human, cedar, prime, nepdb]).assign(input_type='peptide')
peptide_data = peptide_data.drop_duplicates(['peptide'])
peptide_data['peplen'] = peptide_data['peptide'].apply(len)
peptide_data.to_csv('../data/multimodal/240311_merged_peptides.csv', index=False)
tcr_df.to_csv('../data/multimodal/240311_immrepnegs_tcrs.csv', index=False)
tcrpep_df.to_csv('../data/multimodal/240311_nettcr_pairedAB_expanded_noswap.csv', index=False)
multimodal_df = pd.concat([tcrpep_df.assign(input_type='tcr_pep'), 
                           peptide_data.assign(input_type='pep'), 
                           tcr_df.assign(input_type='tcr')])[['peptide', 'A1', 'A2', 'A3', 'B1', 'B2', 'B3', 'allele', 'binder', 'target', 'partition', 'input_type', 'db']]
multimodal_df.to_csv('../data/multimodal/240311_multimodal_tcr_pep.csv', index=False)